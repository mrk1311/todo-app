body {
    /* background-image: linear-gradient(rgb(47, 47, 47), rgb(47, 47, 47) 0); */
    background-color: #187498;
    color: #fff;
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    line-height: 1.5;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#main {
    height: 100vh;
    padding: 2rem;
    max-width: 1000px;
    min-width: 800px;
}

.tabs-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-wrap: wrap;
    width: 100%;
    gap: 10px;
    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.443));
    /* background-color: #465775; */
    background-color: #60B2E5;
    border-radius: 10px 10px 0 0;
}

.tabs-container ::placeholder {
    color: #fff;
}

.tabs-container ::-ms-inpput-placeholder {
    color: #fff;
}

.tab-input {
    width: 100%;
    background-image: transparent;
    border: none;
    color: #000;
    text-align: center;
}

.tab {
    /* border: 3px solid #000; */
    border-radius: 10px 10px 0 0;
    padding: 1rem;
    cursor: pointer;
    display: flex;
    gap: 1rem;
    flex-direction: row;
    margin-bottom: -1px;
    background-image: linear-gradient( transparent, rgb(0, 0, 0));
    /* background-color: #828282; */
    /* background-color: gray; */
}

.tab:hover {
    background-color: #00000031;
    transition: all 0.2s ease-in-out;
}


.tab.active {
    background-color: #000;
    color: #fff;
}

.tasks-container {
    display: flex;
    flex-direction: column;
    /* align-items: center; */
    justify-content: center;
    gap: 3rem;
    width: 100%;

}

.task-header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    border-radius: 0 0 10px 10px;
    background-color: #000;
    padding-left: 1rem;
}

.task-header > * {
    width: 25%;
    text-align: center;
}

.task-main, .task-input-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    /* border: 1px solid #000; */
    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.523));
    border-radius: 10px;
    color: #fff;
    cursor: pointer;
}

.task-input-container {
    /* background-image: linear-gradient(transparent, rgb(255, 255, 255)); */
    /* background-color: #fff; */
    
    background-color: #60B2E5;
    border-radius: 10px 10px 0 0;

    height: 3rem;
}

.task-main {
    position: relative;
}

.task-element {
    width: 100%;
}

.task-details {
    display: flex;
    align-items: center;
    justify-content: center;

    padding: 0.5rem;
    margin-top: -10px;
    border-radius: 0 0 10px 10px;
    /* background-color: #B9C0DA; */
    background-color: #414066;
    /* background-image: linear-gradient( rgba(0, 0, 0, 0.443),  transparent); */
    color: #fff;
    /* border: 3px solid #000; */

    padding-top: 1rem;
    padding-bottom: 0.5 rem;
}

/* .completed .task-details {
    background-color: #5E4B56;
} */

.task-main > span, .task-input {
    width: 25%;
    text-align: center;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    padding: 0.5rem;
    /* border-radius: 10px; */
    flex-wrap: wrap;
    /* flex-grow: 0;
    flex-shrink: 0; */
}

.tasks-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.add-task-button {
    width: 100%;
    display: block;
    padding: 0.5rem;
    border-radius: 10px;
    background-color: #000;
    color: #fff;
    border: none;
    border-radius: 0 0 10px 10px;
    cursor: pointer;
}

.task-input {
    width: 100%;
    background-image: transparent;
    border: none;
    color: #000;
    text-align: center;
}

.task-input-container ::placeholder {
    color: #000;
    opacity: 1;
}

.task-input-container ::-ms-input-placeholder {
    color: #000;
}

input {
    font-size: 1rem;
    background-color: transparent;
    border: none;
    color: #fff;
    /* cursor: pointer; */
}

input[type="text"] {
    border: none;
    border-bottom: 1px solid #000;
    height: 100%;
    color:#000;
}

input[type="text"]:focus {
    outline: none;
    width: 100%;
    color:#fff;
}

.task-main form input ::placeholder {
    color: #fff;
}

select {
    --webkit-appearance: none;
    --moz-appearance: none;
    appearance: none;
    background-color: transparent;
    border: none;
    color: #fff;
    text-align: center;
}

select {
    cursor: pointer;
}

input[type="date"] {
    cursor: pointer;
}

.completed > * {
    color:rgb(0, 0, 0)
}

#description-form {
    width: 100%;
}

.task-delete-button, .delete-button {
    font-size: 1rem;
    cursor: pointer;
    border-radius: 10px;
    width: 2rem;
    border: 1px solid #fff;
    background-color: #ffffff2b;
    color: #fff;
    transition: all 0.1s ease-in-out;
}

.task-delete-button:hover, .delete-button:hover {
    background-color: #ffffff84;
}

.add-task-button {
    transition: all 0.1s ease-in-out;
}

.add-task-button:hover {
    border: 2px solid #fff;
}

.completed button {
    border: 1px solid #000;
    /* background-color: #000; */
    color: #000;
}


/* Customize the label (the container) */
.checkbox-container {
    display: block;
    position: relative;
    /* padding-left: 35px; */
    margin-bottom: 1.5rem;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default checkbox */
  .checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 1.5rem;
    width: 2rem;
    background-color: #eee;
    border-radius: 10px;
  }
  
  /* On mouse-over, add a grey background color */
  .checkbox-container:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  /* When the checkbox is checked, add a blue background */
  .checkbox-container input:checked ~ .checkmark {
    background-color: #60B2E5;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .checkbox-container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .checkbox-container .checkmark:after {
    left: 12px;
    top: 5px;
    width: 5px;
    height: 10px;
    position: relative;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }